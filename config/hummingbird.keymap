/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define DEF_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 19 18 17 16 15 23 24 25 29 28 27 26>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <4 3 2 1 0 10 11 12 13 14 22 21 20 26 27 28 29>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_z {
            timeout-ms = <50>;
            key-positions = <20 21>;
            bindings = <&kp Z>;
        };

        combo_b {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp B>;
        };

        combo_y {
            timeout-ms = <50>;
            key-positions = <23 24>;
            bindings = <&kp Y>;
        };

        combo_slash {
            timeout-ms = <50>;
            key-positions = <24 25>;
            bindings = <&kp SLASH>;
        };
    };


    macros {
        open_angle_quote: open_angle_quote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(NUMBER_2) &kp LS(SPACE)>;
            label = "OPEN_ANGLE_QUOTE";
        };

        closed_angle_quote: closed_angle_quote {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(SPACE) &kp LS(NUMBER_3)>;
            label = "CLOSED_ANGLE_QUOTE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q        &kp W        &kp E         &kp R            &kp T        &kp Y             &kp U         &kp I            &kp O        &kp P
&hml LGUI A  &hml RALT S  &hml LCTRL D  &hml LSHFT F     &kp G        &kp H             &hmr RSHFT J  &hmr RCTRL K     &hmr RALT L  &hmr RGUI SEMICOLON
             &kp X        &hml LALT C   &kp V                                           &kp M         &hmr LALT COMMA  &kp DOT
                                        &lt NAV_L SPACE  &lt 4 TAB    &mt LSHIFT ENTER  &lt 2 BSPC
            >;
        };

        nav_layer {
            display-name = "Nav";
            bindings = <
&trans  &trans  &trans             &trans  &trans    &trans    &kp HOME       &kp END       &trans     &kp PRINTSCREEN
&trans  &trans  &hml LCTRL ESCAPE  &trans  &trans    &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp CAPS
        &trans  &trans             &trans                      &kp PAGE_DOWN  &kp PG_UP     &trans
                                   &trans  &trans    &trans    &kp DEL
            >;
        };

        num_layer {
            display-name = "NUMERIC";
            bindings = <
&kp F1  &kp F2  &kp F3        &kp F4   &kp F5     &kp F6   &kp F7   &kp F8        &kp F9  &kp F10
&kp N1  &kp N2  &kp N3        &kp N4   &kp N5     &kp N6   &kp N7   &kp N8        &kp N9  &kp N0
        &kp N1  &hml LALT N2  &kp N3                       &kp N8   &hmr LALT N9  &kp N0
                              &kp F11  &kp F12    &kp F11  &kp F12
            >;
        };

        Media {
            display-name = "Sym";
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans                    &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        Mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans          &msc SCRL_LEFT  &msc SCRL_RIGHT  &trans           &trans
&trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP     &mmv MOVE_RIGHT  &mkp MCLK
        &trans  &trans  &trans                            &msc SCRL_DOWN  &msc SCRL_UP     &trans
                        &trans  &trans    &mkp RCLK       &mkp LCLK
            >;
        };
    };
};
